{
  "contractName": "Crowdsale",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getAddressFCToken",
      "outputs": [
        {
          "internalType": "contract FCToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddressStacking",
      "outputs": [
        {
          "internalType": "contract Stacking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getAddressFCToken\",\"outputs\":[{\"internalType\":\"contract FCToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressStacking\",\"outputs\":[{\"internalType\":\"contract Stacking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0x30d6b74898bcca4554d83fe674ec637552feb2ebd498942f9027622c324443f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d67b3bd73e8c267adace96362a830904f2007ba6effe6b89ea16ea15f548ecb\",\"dweb:/ipfs/QmS9v6pJDhzpDjQPSYAdMH8BZnekoKCb3nSYri9UmFyvZQ\"]},\"project:/contracts/FCToken.sol\":{\"keccak256\":\"0xe618b83f2147f2ba6fcae6db674775b0f037417cbb9d20870056e008c77c19c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04bfe9cabec611803b8688ff0b1b43f66ef85e58adceab59a8713331f0cfa1b4\",\"dweb:/ipfs/QmcEjL6fk93hyYZ6m1yFreGyaDiEE6KYYtbsjH2Ko72aFs\"]},\"project:/contracts/Stacking.sol\":{\"keccak256\":\"0x3b3bc3318a9cf2cf4639c8fc84cebfdb0331fc8ef06455af01f1eae31326d7b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4c00a175975280b0c220d7239f7cdb8d3132e9b4c1cf12b5c950d363968735c\",\"dweb:/ipfs/QmYU6EHdecj9H8XDfLQTiKoerBeamJ7AhQVat3jSWu8x7Z\"]}},\"version\":1}",
  "bytecode": "0x6080604052603260025534801561001557600080fd5b5060405161002290610119565b604051809103906000f08015801561003e573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040516100ac90610126565b6100b79291906101d3565b604051809103906000f0801580156100d3573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fc565b611a5b806103e183390190565b6118b880611e3c83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061017861017361016e84610133565b610153565b610133565b9050919050565b600061018a8261015d565b9050919050565b600061019c8261017f565b9050919050565b6101ac81610191565b82525050565b60006101bd82610133565b9050919050565b6101cd816101b2565b82525050565b60006040820190506101e860008301856101a3565b6101f560208301846101c4565b9392505050565b6101d68061020b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806397c4e3691461003b578063b04eec2d14610059575b600080fd5b610043610077565b6040516100509190610149565b60405180910390f35b6100616100a1565b60405161006e9190610185565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061010f61010a610105846100ca565b6100ea565b6100ca565b9050919050565b6000610121826100f4565b9050919050565b600061013382610116565b9050919050565b61014381610128565b82525050565b600060208201905061015e600083018461013a565b92915050565b600061016f82610116565b9050919050565b61017f81610164565b82525050565b600060208201905061019a6000830184610176565b9291505056fea2646970667358221220be2efd9a96fcfe65147cb7bd378ed73094b35a96127d57e43c4e094819202c0364736f6c634300080b003360806040523480156200001157600080fd5b506040518060400160405280600d81526020017f466f6c6c6f772d43727970746f000000000000000000000000000000000000008152506040518060400160405280600281526020017f464300000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000257565b508060049080519060200190620000af92919062000257565b505050620000ce33693f870857a3e0e3800000620000d460201b60201c565b620004b3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000147576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013e9062000368565b60405180910390fd5b6200015b600083836200024d60201b60201c565b80600260008282546200016f9190620003c3565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c69190620003c3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022d919062000431565b60405180910390a362000249600083836200025260201b60201c565b5050565b505050565b505050565b82805462000265906200047d565b90600052602060002090601f016020900481019282620002895760008555620002d5565b82601f10620002a457805160ff1916838001178555620002d5565b82800160010185558215620002d5579182015b82811115620002d4578251825591602001919060010190620002b7565b5b509050620002e49190620002e8565b5090565b5b8082111562000303576000816000905550600101620002e9565b5090565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000350601f8362000307565b91506200035d8262000318565b602082019050919050565b60006020820190508181036000830152620003838162000341565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003d0826200038a565b9150620003dd836200038a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000415576200041462000394565b5b828201905092915050565b6200042b816200038a565b82525050565b600060208201905062000448600083018462000420565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049657607f821691505b60208210811415620004ad57620004ac6200044e565b5b50919050565b61159880620004c36000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063de5f72fd14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610dc0565b60405180910390f35b6100f160048036038101906100ec9190610e7b565b61031d565b6040516100fe9190610ed6565b60405180910390f35b61010f61033b565b60405161011c9190610f00565b60405180910390f35b61013f600480360381019061013a9190610f1b565b610345565b60405161014c9190610ed6565b60405180910390f35b61015d61043d565b60405161016a9190610f8a565b60405180910390f35b61018d60048036038101906101889190610e7b565b610446565b60405161019a9190610ed6565b60405180910390f35b6101bd60048036038101906101b89190610fa5565b6104f2565b6040516101ca9190610f00565b60405180910390f35b6101db61053a565b6040516101e89190610dc0565b60405180910390f35b61020b60048036038101906102069190610e7b565b6105cc565b6040516102189190610ed6565b60405180910390f35b61023b60048036038101906102369190610e7b565b6106b7565b6040516102489190610ed6565b60405180910390f35b61026b60048036038101906102669190610fd2565b6106d5565b6040516102789190610f00565b60405180910390f35b61028961075c565b005b60606003805461029a90611041565b80601f01602080910402602001604051908101604052809291908181526020018280546102c690611041565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b600061033161032a610769565b8484610771565b6001905092915050565b6000600254905090565b600061035284848461093c565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061039d610769565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610414906110e5565b60405180910390fd5b61043185610429610769565b858403610771565b60019150509392505050565b60006012905090565b60006104e8610453610769565b848460016000610461610769565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104e39190611134565b610771565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461054990611041565b80601f016020809104026020016040519081016040528092919081815260200182805461057590611041565b80156105c25780601f10610597576101008083540402835291602001916105c2565b820191906000526020600020905b8154815290600101906020018083116105a557829003601f168201915b5050505050905090565b600080600160006105db610769565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f906111fc565b60405180910390fd5b6106ac6106a3610769565b85858403610771565b600191505092915050565b60006106cb6106c4610769565b848461093c565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610767336064610bbd565b565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d89061128e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890611320565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161092f9190610f00565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a3906113b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1390611444565b60405180910390fd5b610a27838383610d1d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa4906114d6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b409190611134565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba49190610f00565b60405180910390a3610bb7848484610d22565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2490611542565b60405180910390fd5b610c3960008383610d1d565b8060026000828254610c4b9190611134565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ca09190611134565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d059190610f00565b60405180910390a3610d1960008383610d22565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d61578082015181840152602081019050610d46565b83811115610d70576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d9282610d27565b610d9c8185610d32565b9350610dac818560208601610d43565b610db581610d76565b840191505092915050565b60006020820190508181036000830152610dda8184610d87565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1282610de7565b9050919050565b610e2281610e07565b8114610e2d57600080fd5b50565b600081359050610e3f81610e19565b92915050565b6000819050919050565b610e5881610e45565b8114610e6357600080fd5b50565b600081359050610e7581610e4f565b92915050565b60008060408385031215610e9257610e91610de2565b5b6000610ea085828601610e30565b9250506020610eb185828601610e66565b9150509250929050565b60008115159050919050565b610ed081610ebb565b82525050565b6000602082019050610eeb6000830184610ec7565b92915050565b610efa81610e45565b82525050565b6000602082019050610f156000830184610ef1565b92915050565b600080600060608486031215610f3457610f33610de2565b5b6000610f4286828701610e30565b9350506020610f5386828701610e30565b9250506040610f6486828701610e66565b9150509250925092565b600060ff82169050919050565b610f8481610f6e565b82525050565b6000602082019050610f9f6000830184610f7b565b92915050565b600060208284031215610fbb57610fba610de2565b5b6000610fc984828501610e30565b91505092915050565b60008060408385031215610fe957610fe8610de2565b5b6000610ff785828601610e30565b925050602061100885828601610e30565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061105957607f821691505b6020821081141561106d5761106c611012565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b60006110cf602883610d32565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113f82610e45565b915061114a83610e45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561117f5761117e611105565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006111e6602583610d32565b91506111f18261118a565b604082019050919050565b60006020820190508181036000830152611215816111d9565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611278602483610d32565b91506112838261121c565b604082019050919050565b600060208201905081810360008301526112a78161126b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061130a602283610d32565b9150611315826112ae565b604082019050919050565b60006020820190508181036000830152611339816112fd565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061139c602583610d32565b91506113a782611340565b604082019050919050565b600060208201905081810360008301526113cb8161138f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061142e602383610d32565b9150611439826113d2565b604082019050919050565b6000602082019050818103600083015261145d81611421565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006114c0602683610d32565b91506114cb82611464565b604082019050919050565b600060208201905081810360008301526114ef816114b3565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061152c601f83610d32565b9150611537826114f6565b602082019050919050565b6000602082019050818103600083015261155b8161151f565b905091905056fea2646970667358221220188fac0bdaaeefdf15b909dea2a7d17dd4f2f9949aeec92f1039f6e6c1bb978664736f6c634300080b003360806040523480156200001157600080fd5b50604051620018b8380380620018b8833981810160405281019062000037919062000178565b600160008190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001bf565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000fb82620000ce565b9050919050565b60006200010f82620000ee565b9050919050565b620001218162000102565b81146200012d57600080fd5b50565b600081519050620001418162000116565b92915050565b6200015281620000ee565b81146200015e57600080fd5b50565b600081519050620001728162000147565b92915050565b60008060408385031215620001925762000191620000c9565b5b6000620001a28582860162000130565b9250506020620001b58582860162000161565b9150509250929050565b6116e980620001cf6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063120aa8771461004657806325dd82a914610062578063bf7bab731461007e575b600080fd5b610060600480360381019061005b9190610f97565b61009a565b005b61007c60048036038101906100779190610fd7565b61042c565b005b61009860048036038101906100939190610fd7565b610938565b005b600260005414156100e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d790611074565b60405180910390fd5b60026000819055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090506101cb6101b882610e35565b8260400151610ea990919063ffffffff16565b816040018181525050428160200181815250508281604001511015610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c90611106565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383604001516040518363ffffffff1660e01b8152600401610286929190611144565b6020604051808303816000875af11580156102a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c991906111a5565b610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90611244565b60405180910390fd5b61031f838260400151610ebf90919063ffffffff16565b81604001818152505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050507f685f623691df1362fb1363921fcaae4cf9f0a6a210a65198360b29164397375c3384604051610417929190611144565b60405180910390a15060016000819055505050565b60026000541415610472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046990611074565b60405180910390fd5b6002600081905550600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104ba9190611264565b602060405180830381865afa1580156104d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fb9190611294565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090506105ca85610ed5565b610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090611333565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c906113c5565b60405180910390fd5b83600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611457565b60405180910390fd5b61077661076382610e35565b8260400151610ea990919063ffffffff16565b816040018181525050428160200181815250506107a0848260000151610ebf90919063ffffffff16565b8160000181815250508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016107e4929190611144565b6020604051808303816000875af1158015610803573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082791906111a5565b50838261083491906114a6565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161086d9190611264565b602060405180830381865afa15801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190611294565b146108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e59061154c565b60405180910390fd5b7f4f76add759a8fd6ce3c9e34f97784a19d0619acf69408d92a3966e25a091f5c63386866040516109219392919061156c565b60405180910390a150505060016000819055505050565b6000309050600083905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161097d9190611264565b602060405180830381865afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be9190611294565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050610a8d86610ed5565b610acc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac390611333565b60405180910390fd5b600081600001511115610b08576000610ae482610e35565b9050610afd818360400151610ea990919063ffffffff16565b826040018181525050505b610b1f858260000151610ea990919063ffffffff16565b81600001818152505042816020018181525050600181606001901515908115158152505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610cab576001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3386886040518463ffffffff1660e01b8152600401610ce89392919061156c565b6020604051808303816000875af1158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b91906111a5565b508482610d3891906115a3565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401610d719190611264565b602060405180830381865afa158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db29190611294565b14610df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de99061154c565b60405180910390fd5b7faa117ad4674eee5b397e2e7785a9b7daf743d487f5c13348077c206d3d0c58d3338787604051610e259392919061156c565b60405180910390a1505050505050565b600080610e63610e10610e55856020015142610ebf90919063ffffffff16565b610ee890919063ffffffff16565b90506000610e7d6103e86019610ee890919063ffffffff16565b90506000846000015182610e9191906115f9565b90508083610e9f91906115f9565b9350505050919050565b60008183610eb791906115a3565b905092915050565b60008183610ecd91906114a6565b905092915050565b600080823b905060008111915050919050565b60008183610ef69190611682565b905092915050565b600080fd5b6000819050919050565b610f1681610f03565b8114610f2157600080fd5b50565b600081359050610f3381610f0d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6482610f39565b9050919050565b610f7481610f59565b8114610f7f57600080fd5b50565b600081359050610f9181610f6b565b92915050565b60008060408385031215610fae57610fad610efe565b5b6000610fbc85828601610f24565b9250506020610fcd85828601610f82565b9150509250929050565b60008060408385031215610fee57610fed610efe565b5b6000610ffc85828601610f82565b925050602061100d85828601610f24565b9150509250929050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061105e601f83611017565b915061106982611028565b602082019050919050565b6000602082019050818103600083015261108d81611051565b9050919050565b7f4c612064656d616e646520657374207375706572696575722061206c6120726560008201527f636f6d70656e736520646973706f6e69626c652e000000000000000000000000602082015250565b60006110f0603483611017565b91506110fb82611094565b604082019050919050565b6000602082019050818103600083015261111f816110e3565b9050919050565b61112f81610f59565b82525050565b61113e81610f03565b82525050565b60006040820190506111596000830185611126565b6111666020830184611135565b9392505050565b60008115159050919050565b6111828161116d565b811461118d57600080fd5b50565b60008151905061119f81611179565b92915050565b6000602082840312156111bb576111ba610efe565b5b60006111c984828501611190565b91505092915050565b7f4c65207472616e7366657220647520746f6b656e204643546f6b656e206e652060008201527f666f6e6374696f6e6e6520706173202100000000000000000000000000000000602082015250565b600061122e603083611017565b9150611239826111d2565b604082019050919050565b6000602082019050818103600083015261125d81611221565b9050919050565b60006020820190506112796000830184611126565b92915050565b60008151905061128e81610f0d565b92915050565b6000602082840312156112aa576112a9610efe565b5b60006112b88482850161127f565b91505092915050565b7f4c27616464726573736520666f75726e6972206e276573742070617320756e2060008201527f636f6e7472616374202100000000000000000000000000000000000000000000602082015250565b600061131d602a83611017565b9150611328826112c1565b604082019050919050565b6000602082019050818103600083015261134c81611310565b9050919050565b7f4e6f7573206e2761766f6e732070617320646520746f6b656e20656e2070726f60008201527f76656e616e6365206465206c27616464726573736520666f75726e6965000000602082015250565b60006113af603d83611017565b91506113ba82611353565b604082019050919050565b600060208201905081810360008301526113de816113a2565b9050919050565b7f4c65206d6f6e74616e742065737420737570657269657572206120766f74726560008201527f20736f6c64650000000000000000000000000000000000000000000000000000602082015250565b6000611441602683611017565b915061144c826113e5565b604082019050919050565b6000602082019050818103600083015261147081611434565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114b182610f03565b91506114bc83610f03565b9250828210156114cf576114ce611477565b5b828203905092915050565b7f4c65207472616e7366657220647520746f6b656e204552433230206e6520666f60008201527f6e6374696f6e6e65207061732021000000000000000000000000000000000000602082015250565b6000611536602e83611017565b9150611541826114da565b604082019050919050565b6000602082019050818103600083015261156581611529565b9050919050565b60006060820190506115816000830186611126565b61158e6020830185611126565b61159b6040830184611135565b949350505050565b60006115ae82610f03565b91506115b983610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115ee576115ed611477565b5b828201905092915050565b600061160482610f03565b915061160f83610f03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561164857611647611477565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061168d82610f03565b915061169883610f03565b9250826116a8576116a7611653565b5b82820490509291505056fea2646970667358221220702619460a7774010d7ba4e21eec52554db3b1317010f71d77be04b15dd5396564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806397c4e3691461003b578063b04eec2d14610059575b600080fd5b610043610077565b6040516100509190610149565b60405180910390f35b6100616100a1565b60405161006e9190610185565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061010f61010a610105846100ca565b6100ea565b6100ca565b9050919050565b6000610121826100f4565b9050919050565b600061013382610116565b9050919050565b61014381610128565b82525050565b600060208201905061015e600083018461013a565b92915050565b600061016f82610116565b9050919050565b61017f81610164565b82525050565b600060208201905061019a6000830184610176565b9291505056fea2646970667358221220be2efd9a96fcfe65147cb7bd378ed73094b35a96127d57e43c4e094819202c0364736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1395:32",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:32",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:32"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:32"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:32",
                "type": ""
              }
            ],
            "src": "7:126:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:32",
                "type": ""
              }
            ],
            "src": "139:60:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:32"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:32"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:32",
                "type": ""
              }
            ],
            "src": "205:142:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:32",
                "type": ""
              }
            ],
            "src": "353:126:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "561:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "571:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "615:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "584:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "571:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_FCToken_$1415_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "541:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "551:9:32",
                "type": ""
              }
            ],
            "src": "485:142:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:82:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "731:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "783:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_FCToken_$1415_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "736:46:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "736:53:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:66:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "724:66:32"
                }
              ]
            },
            "name": "abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "702:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "709:3:32",
                "type": ""
              }
            ],
            "src": "633:163:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "847:51:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "857:35:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "886:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "868:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:24:32"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "857:7:32"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "829:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "839:7:32",
                "type": ""
              }
            ],
            "src": "802:96:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "969:53:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "986:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1009:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "991:17:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "991:24:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "979:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "979:37:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "979:37:32"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "957:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "964:3:32",
                "type": ""
              }
            ],
            "src": "904:118:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1170:222:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1180:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1192:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1203:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1188:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1180:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1276:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1289:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1300:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1285:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1285:17:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1216:59:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:87:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1216:87:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1357:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1370:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1381:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1366:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1366:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1313:43:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:72:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1313:72:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FCToken_$1415_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1134:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1146:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1154:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1165:4:32",
                "type": ""
              }
            ],
            "src": "1028:364:32"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_FCToken_$1415_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_FCToken_$1415_to_t_address(value))\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_FCToken_$1415_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1641:32",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:32",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:32"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:32"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:32",
                "type": ""
              }
            ],
            "src": "7:126:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:32",
                "type": ""
              }
            ],
            "src": "139:60:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:32"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:32"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:32",
                "type": ""
              }
            ],
            "src": "205:142:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:32",
                "type": ""
              }
            ],
            "src": "353:126:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "562:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "572:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "616:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "585:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "572:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Stacking_$1891_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "542:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "552:9:32",
                "type": ""
              }
            ],
            "src": "485:143:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "716:83:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "733:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "786:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Stacking_$1891_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "738:47:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "738:54:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "726:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:67:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "726:67:32"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Stacking_$1891_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "704:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "711:3:32",
                "type": ""
              }
            ],
            "src": "634:165:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "920:141:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "930:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "942:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "938:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "930:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1040:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1051:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:17:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Stacking_$1891_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "966:60:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:88:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "966:88:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Stacking_$1891__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "904:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "915:4:32",
                "type": ""
              }
            ],
            "src": "805:256:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1143:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1153:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1197:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1166:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1153:9:32"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_FCToken_$1415_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1123:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1133:9:32",
                "type": ""
              }
            ],
            "src": "1067:142:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1296:82:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1313:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1365:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_FCToken_$1415_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1318:46:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1318:53:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:66:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1306:66:32"
                }
              ]
            },
            "name": "abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1284:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1291:3:32",
                "type": ""
              }
            ],
            "src": "1215:163:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1498:140:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1508:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1520:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1531:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1516:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1516:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1508:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1604:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1617:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1628:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1613:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1613:17:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1544:59:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:87:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1544:87:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FCToken_$1415__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1470:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1482:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1493:4:32",
                "type": ""
              }
            ],
            "src": "1384:254:32"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Stacking_$1891_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Stacking_$1891_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Stacking_$1891_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Stacking_$1891__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Stacking_$1891_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_FCToken_$1415_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_FCToken_$1415_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_FCToken_$1415__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_FCToken_$1415_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "124:570:7:-:0;;;251:2;227:26;;259:137;;;;;;;;;;305:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;286:15;;:32;;;;;;;;;;;;;;;;;;359:15;;;;;;;;;;384:4;346:44;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;327:16;;:63;;;;;;;;;;;;;;;;;;124:570;;;;;;;;;;:::o;:::-;;;;;;;;:::o;7:126:32:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:142::-;551:9;584:37;615:5;584:37;:::i;:::-;571:50;;485:142;;;:::o;633:163::-;736:53;783:5;736:53;:::i;:::-;731:3;724:66;633:163;;:::o;802:96::-;839:7;868:24;886:5;868:24;:::i;:::-;857:35;;802:96;;;:::o;904:118::-;991:24;1009:5;991:24;:::i;:::-;986:3;979:37;904:118;;:::o;1028:364::-;1165:4;1203:2;1192:9;1188:18;1180:26;;1216:87;1300:1;1289:9;1285:17;1276:6;1216:87;:::i;:::-;1313:72;1381:2;1370:9;1366:18;1357:6;1313:72;:::i;:::-;1028:364;;;;;:::o;124:570:7:-;;;;;;;",
  "deployedSourceMap": "124:570:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;505:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;401:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;505:102;555:8;584:16;;;;;;;;;;;577:24;;505:102;:::o;401:99::-;450:7;478:15;;;;;;;;;;;471:23;;401:99;:::o;7:126:32:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:143::-;552:9;585:37;616:5;585:37;:::i;:::-;572:50;;485:143;;;:::o;634:165::-;738:54;786:5;738:54;:::i;:::-;733:3;726:67;634:165;;:::o;805:256::-;915:4;953:2;942:9;938:18;930:26;;966:88;1051:1;1040:9;1036:17;1027:6;966:88;:::i;:::-;805:256;;;;:::o;1067:142::-;1133:9;1166:37;1197:5;1166:37;:::i;:::-;1153:50;;1067:142;;;:::o;1215:163::-;1318:53;1365:5;1318:53;:::i;:::-;1313:3;1306:66;1215:163;;:::o;1384:254::-;1493:4;1531:2;1520:9;1516:18;1508:26;;1544:87;1628:1;1617:9;1613:17;1604:6;1544:87;:::i;:::-;1384:254;;;;:::o",
  "source": "// Crowdsale.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./FCToken.sol\";\nimport \"./Stacking.sol\";\n\ncontract Crowdsale \n{   \n   FCToken  private contractFCToken;\n   Stacking private contractStacking;\n   uint     private rate = 50;\n\n   constructor() \n   {\n       contractFCToken  = new FCToken();\n       contractStacking = new Stacking(contractFCToken, address(this));\n   }\n\n   function getAddressFCToken() view public returns(FCToken)\n   {\n       return(contractFCToken);\n   }\n\n   function getAddressStacking() view public returns(Stacking)\n   {\n       return(contractStacking);\n   }\n\n   function getRate() view internal returns(uint256)\n   {\n       return(rate);\n   }\n}",
  "sourcePath": "/home/jg/dev/tuto/alyra/Stacking/contracts/Crowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/Crowdsale.sol",
    "exportedSymbols": {
      "Address": [
        985
      ],
      "Context": [
        1007
      ],
      "Crowdsale": [
        1385
      ],
      "ERC20": [
        585
      ],
      "FCToken": [
        1415
      ],
      "IERC20": [
        663
      ],
      "IERC20Metadata": [
        688
      ],
      "ReentrancyGuard": [
        39
      ],
      "SafeMath": [
        1319
      ],
      "Stacking": [
        1891
      ]
    },
    "id": 1386,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1321,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "49:23:7"
      },
      {
        "absolutePath": "project:/contracts/FCToken.sol",
        "file": "./FCToken.sol",
        "id": 1322,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1416,
        "src": "74:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Stacking.sol",
        "file": "./Stacking.sol",
        "id": 1323,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1892,
        "src": "98:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Crowdsale",
        "contractDependencies": [
          1415,
          1891
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1385,
        "linearizedBaseContracts": [
          1385
        ],
        "name": "Crowdsale",
        "nameLocation": "133:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1326,
            "mutability": "mutable",
            "name": "contractFCToken",
            "nameLocation": "169:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "152:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FCToken_$1415",
              "typeString": "contract FCToken"
            },
            "typeName": {
              "id": 1325,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1324,
                "name": "FCToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1415,
                "src": "152:7:7"
              },
              "referencedDeclaration": 1415,
              "src": "152:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FCToken_$1415",
                "typeString": "contract FCToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1329,
            "mutability": "mutable",
            "name": "contractStacking",
            "nameLocation": "206:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "189:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Stacking_$1891",
              "typeString": "contract Stacking"
            },
            "typeName": {
              "id": 1328,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1327,
                "name": "Stacking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1891,
                "src": "189:8:7"
              },
              "referencedDeclaration": 1891,
              "src": "189:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Stacking_$1891",
                "typeString": "contract Stacking"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1332,
            "mutability": "mutable",
            "name": "rate",
            "nameLocation": "244:4:7",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "227:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1330,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "227:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 1331,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "251:2:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1354,
              "nodeType": "Block",
              "src": "277:119:7",
              "statements": [
                {
                  "expression": {
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1335,
                      "name": "contractFCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1326,
                      "src": "286:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FCToken_$1415",
                        "typeString": "contract FCToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "305:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FCToken_$1415_$",
                          "typeString": "function () returns (contract FCToken)"
                        },
                        "typeName": {
                          "id": 1337,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1336,
                            "name": "FCToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1415,
                            "src": "309:7:7"
                          },
                          "referencedDeclaration": 1415,
                          "src": "309:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FCToken_$1415",
                            "typeString": "contract FCToken"
                          }
                        }
                      },
                      "id": 1339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "305:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FCToken_$1415",
                        "typeString": "contract FCToken"
                      }
                    },
                    "src": "286:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FCToken_$1415",
                      "typeString": "contract FCToken"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "286:32:7"
                },
                {
                  "expression": {
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1342,
                      "name": "contractStacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "327:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Stacking_$1891",
                        "typeString": "contract Stacking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1346,
                          "name": "contractFCToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "359:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FCToken_$1415",
                            "typeString": "contract FCToken"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1349,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "384:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Crowdsale_$1385",
                                "typeString": "contract Crowdsale"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Crowdsale_$1385",
                                "typeString": "contract Crowdsale"
                              }
                            ],
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "376:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1347,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "376:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "376:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FCToken_$1415",
                            "typeString": "contract FCToken"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "346:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_FCToken_$1415_$_t_address_$returns$_t_contract$_Stacking_$1891_$",
                          "typeString": "function (contract FCToken,address) returns (contract Stacking)"
                        },
                        "typeName": {
                          "id": 1344,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1343,
                            "name": "Stacking",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1891,
                            "src": "350:8:7"
                          },
                          "referencedDeclaration": 1891,
                          "src": "350:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Stacking_$1891",
                            "typeString": "contract Stacking"
                          }
                        }
                      },
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "346:44:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Stacking_$1891",
                        "typeString": "contract Stacking"
                      }
                    },
                    "src": "327:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Stacking_$1891",
                      "typeString": "contract Stacking"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "327:63:7"
                }
              ]
            },
            "id": 1355,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:2:7"
            },
            "returnParameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:7"
            },
            "scope": 1385,
            "src": "259:137:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1364,
              "nodeType": "Block",
              "src": "462:38:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1361,
                        "name": "contractFCToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1326,
                        "src": "478:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FCToken_$1415",
                          "typeString": "contract FCToken"
                        }
                      }
                    ],
                    "id": 1362,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "477:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FCToken_$1415",
                      "typeString": "contract FCToken"
                    }
                  },
                  "functionReturnParameters": 1360,
                  "id": 1363,
                  "nodeType": "Return",
                  "src": "471:23:7"
                }
              ]
            },
            "functionSelector": "b04eec2d",
            "id": 1365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressFCToken",
            "nameLocation": "410:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:7"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "450:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FCToken_$1415",
                    "typeString": "contract FCToken"
                  },
                  "typeName": {
                    "id": 1358,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1357,
                      "name": "FCToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1415,
                      "src": "450:7:7"
                    },
                    "referencedDeclaration": 1415,
                    "src": "450:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FCToken_$1415",
                      "typeString": "contract FCToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "449:9:7"
            },
            "scope": 1385,
            "src": "401:99:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "568:39:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1371,
                        "name": "contractStacking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "584:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Stacking_$1891",
                          "typeString": "contract Stacking"
                        }
                      }
                    ],
                    "id": 1372,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "583:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Stacking_$1891",
                      "typeString": "contract Stacking"
                    }
                  },
                  "functionReturnParameters": 1370,
                  "id": 1373,
                  "nodeType": "Return",
                  "src": "577:24:7"
                }
              ]
            },
            "functionSelector": "97c4e369",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressStacking",
            "nameLocation": "514:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:2:7"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "555:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Stacking_$1891",
                    "typeString": "contract Stacking"
                  },
                  "typeName": {
                    "id": 1368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1367,
                      "name": "Stacking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1891,
                      "src": "555:8:7"
                    },
                    "referencedDeclaration": 1891,
                    "src": "555:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Stacking_$1891",
                      "typeString": "contract Stacking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "554:10:7"
            },
            "scope": 1385,
            "src": "505:102:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1383,
              "nodeType": "Block",
              "src": "665:27:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1380,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "681:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1381,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "680:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1379,
                  "id": 1382,
                  "nodeType": "Return",
                  "src": "674:12:7"
                }
              ]
            },
            "id": 1384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nameLocation": "621:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:7"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "653:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:9:7"
            },
            "scope": 1385,
            "src": "612:80:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1386,
        "src": "124:570:7",
        "usedErrors": []
      }
    ],
    "src": "49:645:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Crowdsale.sol",
    "exportedSymbols": {
      "Address": [
        985
      ],
      "Context": [
        1007
      ],
      "Crowdsale": [
        1385
      ],
      "ERC20": [
        585
      ],
      "FCToken": [
        1415
      ],
      "IERC20": [
        663
      ],
      "IERC20Metadata": [
        688
      ],
      "ReentrancyGuard": [
        39
      ],
      "SafeMath": [
        1319
      ],
      "Stacking": [
        1891
      ]
    },
    "id": 1386,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1321,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "49:23:7"
      },
      {
        "absolutePath": "project:/contracts/FCToken.sol",
        "file": "./FCToken.sol",
        "id": 1322,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1416,
        "src": "74:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Stacking.sol",
        "file": "./Stacking.sol",
        "id": 1323,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1892,
        "src": "98:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Crowdsale",
        "contractDependencies": [
          1415,
          1891
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1385,
        "linearizedBaseContracts": [
          1385
        ],
        "name": "Crowdsale",
        "nameLocation": "133:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1326,
            "mutability": "mutable",
            "name": "contractFCToken",
            "nameLocation": "169:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "152:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FCToken_$1415",
              "typeString": "contract FCToken"
            },
            "typeName": {
              "id": 1325,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1324,
                "name": "FCToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1415,
                "src": "152:7:7"
              },
              "referencedDeclaration": 1415,
              "src": "152:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FCToken_$1415",
                "typeString": "contract FCToken"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1329,
            "mutability": "mutable",
            "name": "contractStacking",
            "nameLocation": "206:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "189:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Stacking_$1891",
              "typeString": "contract Stacking"
            },
            "typeName": {
              "id": 1328,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1327,
                "name": "Stacking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1891,
                "src": "189:8:7"
              },
              "referencedDeclaration": 1891,
              "src": "189:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Stacking_$1891",
                "typeString": "contract Stacking"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1332,
            "mutability": "mutable",
            "name": "rate",
            "nameLocation": "244:4:7",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "227:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1330,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "227:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 1331,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "251:2:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1354,
              "nodeType": "Block",
              "src": "277:119:7",
              "statements": [
                {
                  "expression": {
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1335,
                      "name": "contractFCToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1326,
                      "src": "286:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FCToken_$1415",
                        "typeString": "contract FCToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "305:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FCToken_$1415_$",
                          "typeString": "function () returns (contract FCToken)"
                        },
                        "typeName": {
                          "id": 1337,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1336,
                            "name": "FCToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1415,
                            "src": "309:7:7"
                          },
                          "referencedDeclaration": 1415,
                          "src": "309:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FCToken_$1415",
                            "typeString": "contract FCToken"
                          }
                        }
                      },
                      "id": 1339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "305:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FCToken_$1415",
                        "typeString": "contract FCToken"
                      }
                    },
                    "src": "286:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FCToken_$1415",
                      "typeString": "contract FCToken"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "286:32:7"
                },
                {
                  "expression": {
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1342,
                      "name": "contractStacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1329,
                      "src": "327:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Stacking_$1891",
                        "typeString": "contract Stacking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1346,
                          "name": "contractFCToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "359:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FCToken_$1415",
                            "typeString": "contract FCToken"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1349,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "384:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Crowdsale_$1385",
                                "typeString": "contract Crowdsale"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Crowdsale_$1385",
                                "typeString": "contract Crowdsale"
                              }
                            ],
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "376:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1347,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "376:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "376:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FCToken_$1415",
                            "typeString": "contract FCToken"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "346:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_FCToken_$1415_$_t_address_$returns$_t_contract$_Stacking_$1891_$",
                          "typeString": "function (contract FCToken,address) returns (contract Stacking)"
                        },
                        "typeName": {
                          "id": 1344,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1343,
                            "name": "Stacking",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1891,
                            "src": "350:8:7"
                          },
                          "referencedDeclaration": 1891,
                          "src": "350:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Stacking_$1891",
                            "typeString": "contract Stacking"
                          }
                        }
                      },
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "346:44:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Stacking_$1891",
                        "typeString": "contract Stacking"
                      }
                    },
                    "src": "327:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Stacking_$1891",
                      "typeString": "contract Stacking"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "327:63:7"
                }
              ]
            },
            "id": 1355,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:2:7"
            },
            "returnParameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:7"
            },
            "scope": 1385,
            "src": "259:137:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1364,
              "nodeType": "Block",
              "src": "462:38:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1361,
                        "name": "contractFCToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1326,
                        "src": "478:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FCToken_$1415",
                          "typeString": "contract FCToken"
                        }
                      }
                    ],
                    "id": 1362,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "477:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FCToken_$1415",
                      "typeString": "contract FCToken"
                    }
                  },
                  "functionReturnParameters": 1360,
                  "id": 1363,
                  "nodeType": "Return",
                  "src": "471:23:7"
                }
              ]
            },
            "functionSelector": "b04eec2d",
            "id": 1365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressFCToken",
            "nameLocation": "410:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:7"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "450:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FCToken_$1415",
                    "typeString": "contract FCToken"
                  },
                  "typeName": {
                    "id": 1358,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1357,
                      "name": "FCToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1415,
                      "src": "450:7:7"
                    },
                    "referencedDeclaration": 1415,
                    "src": "450:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FCToken_$1415",
                      "typeString": "contract FCToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "449:9:7"
            },
            "scope": 1385,
            "src": "401:99:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "568:39:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1371,
                        "name": "contractStacking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "584:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Stacking_$1891",
                          "typeString": "contract Stacking"
                        }
                      }
                    ],
                    "id": 1372,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "583:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Stacking_$1891",
                      "typeString": "contract Stacking"
                    }
                  },
                  "functionReturnParameters": 1370,
                  "id": 1373,
                  "nodeType": "Return",
                  "src": "577:24:7"
                }
              ]
            },
            "functionSelector": "97c4e369",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressStacking",
            "nameLocation": "514:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:2:7"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "555:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Stacking_$1891",
                    "typeString": "contract Stacking"
                  },
                  "typeName": {
                    "id": 1368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1367,
                      "name": "Stacking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1891,
                      "src": "555:8:7"
                    },
                    "referencedDeclaration": 1891,
                    "src": "555:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Stacking_$1891",
                      "typeString": "contract Stacking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "554:10:7"
            },
            "scope": 1385,
            "src": "505:102:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1383,
              "nodeType": "Block",
              "src": "665:27:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1380,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "681:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1381,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "680:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1379,
                  "id": 1382,
                  "nodeType": "Return",
                  "src": "674:12:7"
                }
              ]
            },
            "id": 1384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nameLocation": "621:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:7"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "653:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:9:7"
            },
            "scope": 1385,
            "src": "612:80:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1386,
        "src": "124:570:7",
        "usedErrors": []
      }
    ],
    "src": "49:645:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-27T11:03:35.714Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}